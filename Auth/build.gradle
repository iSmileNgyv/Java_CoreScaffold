plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.7'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}
ext {
	springGrpcVersion = "0.11.0"
}

group = 'com.ismile.core'
version = '0.0.1-SNAPSHOT'
description = 'Auth'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

ext {
	grpcVersion = "1.60.0"
	protobufVersion = '4.28.2'
	springGrpcVersion = "0.11.0"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
	implementation "io.grpc:grpc-netty:${grpcVersion}"
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
	implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'io.grpc:grpc-services:1.60.0'
	implementation 'io.envoyproxy.controlplane:api:1.0.45'
	implementation 'io.grpc:grpc-services:1.60.0'
	implementation 'com.google.api.grpc:proto-google-common-protos:2.29.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:$springGrpcVersion"
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.25.1' // Or the latest stable version
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.60.0' // Or the latest stable version
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

sourceSets {
	main {
		proto {
			srcDir 'src/main/proto'
		}
	}
}

tasks.withType(ProcessResources) {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
	useJUnitPlatform()
}
