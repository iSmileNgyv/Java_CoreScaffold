syntax = "proto3";

package otp;

option java_multiple_files = true;
option java_outer_classname = "OtpProto";

service OtpService {
  // Generates and sends an OTP code to a user's preferred delivery method.
  rpc SendCode (SendCodeRequest) returns (SendCodeResponse);

  // Verifies a provided OTP code for a user.
  rpc VerifyCode (VerifyCodeRequest) returns (VerifyCodeResponse);
}

// Enum to define the purpose of the OTP
enum OtpType {
  UNKNOWN = 0;
  REGISTRATION = 1;
  LOGIN = 2;
  PASSWORD_RESET = 3;
}

// Request to send an OTP
message SendCodeRequest {
  // The unique identifier for the user
  int32 user_id = 1;
  // The type/purpose of the OTP
  OtpType type = 2;
}

// Response after sending an OTP
message SendCodeResponse {
  bool success = 1;
  string message = 2;
  // A unique identifier for the OTP attempt, can be used for tracking
  string request_id = 3;
  // The delivery method used to send the OTP
  string delivery_method = 4;
}

// Request to verify an OTP
message VerifyCodeRequest {
  // The unique identifier for the user
  int32 user_id = 1;
  // The type/purpose of the OTP
  OtpType type = 2;
  // The OTP code entered by the user
  string code = 3;
}

// Response after verifying an OTP
message VerifyCodeResponse {
  bool success = 1;
  string message = 2;
}
